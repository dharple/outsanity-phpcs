<?xml version="1.0"?>
<ruleset name="Outsanity">

    <description>The outsanity coding standard.</description>

    <arg value="s" />

    <arg name="colors" />
    <arg name="encoding" value="utf-8" />
    <arg name="report" value="full" />
    <arg name="report-width" value="132" />

    <rule ref="PSR12" />

    <!-- Copied and fixed from PSR12 -->
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="ignoreIndentationTokens" type="array">
                <element value="T_COMMENT" />
                <element value="T_DOC_COMMENT_OPEN_TAG" />
            </property>
            <!-- Class properties aren't checked without this enabled -->
            <property name="exact" value="true" />
        </properties>
    </rule>

    <!-- Formatting -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax" />
    <rule ref="Generic.Commenting.DocComment">
        <exclude name="Generic.Commenting.DocComment.TagValueIndent" />
        <exclude name="Generic.Commenting.DocComment.ParamNotFirst" />
    </rule>
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="160" />
            <property name="absoluteLineLimit" value="0" />
        </properties>
    </rule>
    <rule ref="Generic.Formatting.SpaceAfterCast" />
    <rule ref="vendor/ork/phpcs/Ork/Sniffs/Formatting" />
    <rule ref="Squiz.Commenting.BlockComment">
        <exclude name="Squiz.Commenting.BlockComment.WrongStart" />
    </rule>
    <rule ref="Squiz.Commenting.ClassComment" />
    <rule ref="Squiz.Commenting.DocCommentAlignment" />
    <rule ref="Squiz.Commenting.EmptyCatchComment" />
    <rule ref="Squiz.Commenting.FileComment">
        <exclude name="Squiz.Commenting.FileComment.MissingPackageTag" />
        <exclude name="Squiz.Commenting.FileComment.SpacingAfterOpen" />
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment">
        <exclude name="Squiz.Commenting.FunctionComment.IncorrectParamVarName" />
        <exclude name="Squiz.Commenting.FunctionComment.InvalidReturn" />
    </rule>
    <rule ref="Squiz.Commenting.FunctionCommentThrowTag" />
    <rule ref="Squiz.Commenting.InlineComment">
        <exclude name="Squiz.Commenting.InlineComment.DocBlock" />
        <exclude name="Squiz.Commenting.InlineComment.SpacingAfter" />
        <exclude name="Squiz.Commenting.InlineComment.NotCapital" />
        <exclude name="Squiz.Commenting.InlineComment.InvalidEndChar" />
    </rule>
    <rule ref="Squiz.Commenting.PostStatementComment" />
    <rule ref="Squiz.Commenting.VariableComment">
        <exclude name="Squiz.Commenting.VariableComment.IncorrectVarType" />
        <exclude name="Squiz.Commenting.VariableComment.TagNotAllowed" />
        <exclude name="Squiz.Commenting.VariableComment.VarOrder" />
    </rule>
    <rule ref="Squiz.Strings.DoubleQuoteUsage" />
    <rule ref="Squiz.WhiteSpace.CastSpacing" />

    <!-- Sanity Checks -->
    <rule ref="Generic.Classes.DuplicateClassName" />
    <rule ref="Generic.CodeAnalysis.EmptyStatement">
        <exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedCatch" />
    </rule>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop" />
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement" />
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier" />
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter">
        <exclude name="Generic.CodeAnalysis.UnusedFunctionParameter.FoundInExtendedClass" />
        <exclude name="Generic.CodeAnalysis.UnusedFunctionParameter.FoundInExtendedClassAfterLastUsed" />
        <exclude name="Generic.CodeAnalysis.UnusedFunctionParameter.FoundInExtendedClassBeforeLastUsed" />
        <exclude name="Generic.CodeAnalysis.UnusedFunctionParameter.FoundInImplementedInterfaceAfterLastUsed" />
        <exclude name="Generic.CodeAnalysis.UnusedFunctionParameter.FoundInImplementedInterfaceBeforeLastUsed" />
    </rule>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />
    <rule ref="Generic.Commenting.Fixme" />
    <rule ref="Generic.Commenting.Todo" />
    <rule ref="Generic.Files.OneClassPerFile" />
    <rule ref="Generic.Files.OneInterfacePerFile" />
    <rule ref="Generic.Files.OneTraitPerFile" />
    <rule ref="Generic.Functions.CallTimePassByReference" />
    <rule ref="Generic.Metrics.CyclomaticComplexity" />
    <rule ref="Generic.Metrics.NestingLevel" />
    <rule ref="Generic.PHP.BacktickOperator" />
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag" />
    <rule ref="Generic.PHP.DeprecatedFunctions" />
    <rule ref="Generic.PHP.SAPIUsage" />
    <rule ref="Generic.PHP.Syntax" />
    <rule ref="Squiz.PHP.CommentedOutCode" />
    <rule ref="Squiz.PHP.GlobalKeyword" />
    <rule ref="Squiz.PHP.Heredoc" />
    <rule ref="Squiz.PHP.InnerFunctions" />
    <rule ref="Squiz.PHP.LowercasePHPFunctions" />
    <rule ref="Squiz.PHP.NonExecutableCode" />
    <rule ref="Squiz.Scope.StaticThisUsage" />

</ruleset>
